# 即时通信系统设计文档

## 1 设计目标
即时通信系统（Instant Messaging System）是一款跨平台、可定制的 P2P 即时通信系统，集成多人视频会议功能。旨在为各行业门户网站和企事业单位提供“一站式”定制解决方案，打造一个稳定、安全、高效、可扩展的即时通信系统，在用户使用习惯的设计上接近或兼容 MSN、TM、imo、贸易通和淘宝旺旺等即时通讯产品。

## 2 功能描述

### 2.1 用户注册与登录
- **输入**：用户在客户端输入用户名、密码、邮箱等必要信息进行注册；输入用户名和密码进行登录。
- **反馈**：注册成功后提示注册成功，并引导用户登录；登录成功后进入主界面，登录失败提示相应错误信息（如用户名或密码错误）。

### 2.2 好友管理
- **输入**：用户在好友列表界面输入好友用户名或 ID 进行添加好友操作；选择好友进行删除、备注等操作。
- **反馈**：添加好友请求发送成功提示；对方同意或拒绝添加好友后给予相应提示；删除好友成功提示；备注修改成功提示。

### 2.3 私聊功能
- **输入**：用户在好友列表中选择好友，输入文字、图片、文件等消息内容进行发送；点击语音或视频通话按钮发起通话。
- **反馈**：消息发送成功提示；对方接收消息后，消息状态更新为已读；语音或视频通话对方接听或拒绝给予相应提示。

### 2.4 群聊功能
- **输入**：用户创建群聊并邀请好友加入；在群聊界面输入消息内容进行发送。
- **反馈**：群聊创建成功提示；好友加入或退出群聊提示；消息发送成功提示。

### 2.5 视频会议功能
- **输入**：用户发起视频会议邀请，选择参会人员；在视频会议中进行语音交流、共享屏幕等操作。
- **反馈**：邀请发送成功提示；参会人员接受或拒绝邀请提示；视频会议开始、结束提示。

### 2.6 文件传输功能
- **输入**：用户选择要发送的文件，选择接收方（好友或群聊）进行发送。
- **反馈**：文件发送进度显示；文件发送成功或失败提示；接收方接收文件提示。

### 2.7 离线消息同步
- **输入**：离线用户上线。
- **反馈**：系统自动同步离线期间收到的消息，并显示在聊天界面。

## 3 开发环境

### 3.1 后端开发
- **编程语言**：Java
- **框架**：Spring Boot、MyBatis Plus
- **数据库**：MySQL
- **服务器**：Netty

### 3.2 前端开发
- **Web 端**：Vue.js
- **移动端**：UniApp
- **通信协议**：WebSocket

### 3.3 开发工具
- **IDE**：IntelliJ IDEA、Visual Studio Code
- **版本控制**：Git

## 4 系统设计

### 4.1 系统结构设计
系统主要分为以下几个模块：
- **用户管理模块**：负责用户的注册、登录、信息管理等功能。
- **好友管理模块**：负责好友的添加、删除、备注等功能。
- **消息管理模块**：负责私聊、群聊、系统消息的发送和接收。
- **视频会议模块**：负责视频会议的发起、邀请、参会等功能。
- **文件传输模块**：负责文件的上传、下载和传输。
- **客户端模块**：包括 Web 端和移动端客户端，提供用户界面和交互功能。

模块之间的数据交换如下：
- 用户管理模块与客户端模块进行用户信息的交互。
- 好友管理模块与客户端模块进行好友信息的交互。
- 消息管理模块与客户端模块进行消息的收发，与数据库进行消息的存储和查询。
- 视频会议模块与客户端模块进行视频会议的控制和交互。
- 文件传输模块与客户端模块进行文件的上传和下载，与服务器进行文件的存储和传输。

### 4.2 用户界面设计

4.2.1 主界面布局
- 左侧为好友列表和群聊列表，可切换显示。
- 中间为聊天界面，显示聊天记录。
- 右侧为用户信息和操作面板，显示当前用户信息、设置按钮等。

4.2.2 功能按钮设计
- 聊天界面底部提供输入框和发送按钮，支持文字、图片、文件的发送。
- 输入框旁边提供语音、视频通话按钮，用于发起通话。
- 好友列表和群聊列表提供添加、删除、备注等操作按钮。
- 用户信息和操作面板提供设置、退出登录等按钮。

4.2.3 交互式设计
- 聊天记录支持滚动加载，当滚动到顶部时自动加载更多历史消息。
- 消息发送后，在聊天界面显示发送状态（如发送中、已发送、已读）。
- 视频会议界面提供静音、关闭摄像头、共享屏幕等操作按钮。
- 文件传输界面显示文件发送和接收进度。

### 4.3 通信功能的实现

#### 4.3.1 私聊功能
- 客户端通过 WebSocket 与服务器建立连接，发送私聊消息请求。
- 服务器接收到请求后，根据接收方 ID 查找在线用户的会话信息，将消息发送给接收方。
- 如果接收方离线，服务器将消息存储到数据库中，待接收方上线时进行同步。

#### 4.3.2 群聊功能
- 客户端通过 WebSocket 与服务器建立连接，发送群聊消息请求。
- 服务器接收到请求后，根据群聊 ID 查找群成员列表，将消息发送给所有群成员。
- 如果群成员离线，服务器将消息存储到数据库中，待群成员上线时进行同步。

#### 4.3.3 语音和视频通话功能
- 客户端通过 WebRTC 技术实现语音和视频通话。
- 发起方发送通话邀请请求，服务器将邀请信息转发给接收方。
- 接收方接受邀请后，双方通过 WebRTC 建立 P2P 连接，进行语音和视频通话。

#### 4.3.4 文件传输功能
- 客户端通过 HTTP 协议将文件上传到服务器。
- 服务器接收到文件后，将文件存储到指定位置，并生成文件链接。
- 服务器将文件链接发送给接收方，接收方通过 HTTP 协议下载文件。

### 4.4 客户端数据同步
考虑离线用户上线时消息显示的问题，具体实现如下：
- 客户端上线后，向服务器发送离线消息同步请求。
- 服务器根据用户 ID 从数据库中查询离线期间收到的消息，并将消息发送给客户端。
- 客户端接收到消息后，将消息显示在聊天界面。

| 表1：离线消息同步说明 |  |
| --- | --- |
| 描述 | 离线用户上线后，系统自动同步离线期间收到的消息，并显示在聊天界面。 |

## 5 测试

### 5.1 功能测试
- **用户注册与登录**：测试注册和登录功能的正确性，包括输入合法和非法信息的情况。
- **好友管理**：测试添加、删除、备注好友功能的正确性。
- **私聊功能**：测试文字、图片、文件消息的发送和接收，以及语音、视频通话功能。
- **群聊功能**：测试群聊消息的发送和接收，以及群成员的管理功能。
- **视频会议功能**：测试视频会议的发起、邀请、参会等功能。
- **文件传输功能**：测试文件的上传、下载和传输功能。

### 5.2 性能测试
- 测试系统在高并发情况下的性能，包括消息发送和接收的响应时间、视频会议的稳定性等。

### 5.3 兼容性测试
- 测试系统在不同浏览器和移动设备上的兼容性。

### 测试结果
经过测试，各项功能均能正常实现，性能和兼容性满足设计要求。

## 参考文献
[1] 李刚. 疯狂Java讲义[M]. 电子工业出版社, 2020.
[2] 杨开振. Spring Boot实战[M]. 电子工业出版社, 2018.
[3] 汪云飞. MyBatis从入门到精通[M]. 清华大学出版社, 2016.
[4] 李林锋. Netty权威指南[M]. 电子工业出版社, 2015.
[5] 阮一峰. JavaScript高级程序设计[M]. 人民邮电出版社, 2019.